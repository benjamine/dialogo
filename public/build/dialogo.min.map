{"version":3,"file":"bundle.js","sources":["/source-files/dialogo/node_modules/fiberglass/node_modules/browserify/node_modules/browser-pack/_prelude.js","/source-files/dialogo/src/main.js","/source-files/dialogo/src/doc.js","/source-files/dialogo/src/storage.js","/source-files/dialogo/node_modules/fiberglass/node_modules/browserify/node_modules/process/browser.js","/source-files/dialogo/src/peer.js","/source-files/dialogo/node_modules/fiberglass/node_modules/browserify/node_modules/events/events.js","/source-files/dialogo/node_modules/fiberglass/node_modules/browserify/node_modules/util/util.js","/source-files/dialogo/node_modules/jsondiffpatch/src/main.js","/source-files/dialogo/node_modules/fiberglass/node_modules/browserify/node_modules/util/support/isBufferBrowser.js","/source-files/dialogo/node_modules/jsondiffpatch/src/environment.js","/source-files/dialogo/node_modules/jsondiffpatch/src/diffpatcher.js","/source-files/dialogo/node_modules/jsondiffpatch/src/date-reviver.js","/source-files/dialogo/node_modules/jsondiffpatch/src/processor.js","/source-files/dialogo/node_modules/jsondiffpatch/src/contexts/diff.js","/source-files/dialogo/node_modules/jsondiffpatch/src/pipe.js","/source-files/dialogo/node_modules/jsondiffpatch/src/contexts/patch.js","/source-files/dialogo/node_modules/jsondiffpatch/src/filters/trivial.js","/source-files/dialogo/node_modules/jsondiffpatch/src/contexts/reverse.js","/source-files/dialogo/node_modules/jsondiffpatch/src/filters/nested.js","/source-files/dialogo/node_modules/jsondiffpatch/src/filters/arrays.js","/source-files/dialogo/node_modules/jsondiffpatch/src/filters/dates.js","/source-files/dialogo/node_modules/jsondiffpatch/src/filters/texts.js","/source-files/dialogo/node_modules/jsondiffpatch/src/contexts/context.js","/source-files/dialogo/node_modules/jsondiffpatch/src/filters/lcs.js","/source-files/dialogo/node_modules/fiberglass/node_modules/browserify/node_modules/inherits/inherits_browser.js","/source-files/dialogo/node_modules/jsondiffpatch/public/external/diff_match_patch_uncompressed.js"],"names":["Doc","root","version","this","jsondiffpatch","require","prototype","clone","doc","JSON","parse","stringify","dateReviver","url","empty","isEmpty","notFound","exports","Storage","documents","get","options","callback","create","err","Error","put","noop","process","module","nextTick","canSetImmediate","window","setImmediate","canPost","postMessage","addEventListener","f","queue","ev","source","data","stopPropagation","length","fn","shift","push","setTimeout","title","browser","env","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","Peer","name","document","events","EventEmitter","call","counters","messages","sent","received","createShadow","watchInterval","defaults","debug","util","diff_match_patch","inherits","log","args","Array","slice","apply","arguments","unshift","console","syncBroken","stop","syncComplete","watch","use","req","documentRequest","load","opt","self","local","loading","storage","scan","save","saveRequest","saving","saved","shadow","send","message","lastSent","waitingResponse","receive","responding","responseTo","respond","response","error","isBusy","getChanges","delta","ping","watchTimer","setInterval","isPaused","Math","max","clearInterval","pause","resume","diff","peerError","sendNoop","patch","alwaysRespondNoops","sendDoc","loadOptions","bindTo","peer","artificialDelay","boundTo","_events","_maxListeners","undefined","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","n","isNaN","TypeError","type","er","handler","len","i","listeners","listener","m","newListener","warned","trace","g","fired","list","position","splice","key","ret","listenerCount","emitter","inspect","obj","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","str","styleType","style","styles","arrayToHash","array","hash","forEach","val","value","recurseTimes","constructor","isString","primitive","formatPrimitive","keys","Object","visibleKeys","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","RegExp","toString","isDate","Date","base","braces","isArray","toUTCString","output","formatArray","map","formatProperty","pop","reduceToSingleString","simple","replace","isNull","l","hasOwnProperty","String","match","desc","getOwnPropertyDescriptor","set","split","line","join","substr","numLinesEst","reduce","prev","cur","ar","isNullOrUndefined","isSymbol","re","objectToString","d","e","isPrimitive","o","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","format","objects","x","Number","_","deprecate","msg","deprecated","throwDeprecation","traceDeprecation","global","noDeprecation","debugEnviron","debugs","debuglog","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","isBuffer","origin","add","environment","DiffPatcher","defaultInstance","unpatch","reverse","isBrowser","homepage","packageInfoModuleName","packageInfo","formatterModuleName","formatters","copy","fill","readUInt8","Processor","Pipe","DiffContext","PatchContext","ReverseContext","trivial","nested","arrays","dates","texts","processor","pipe","append","collectChildrenDiffFilter","diffFilter","objectsDiffFilter","shouldHaveResult","collectChildrenPatchFilter","patchFilter","collectChildrenReverseFilter","reverseFilter","left","right","parts","exec","UTC","selfOptions","pipes","input","context","lastPipe","lastContext","nextPipe","nextAfterChildren","next","hasResult","result","Context","filters","index","filter","filterName","exiting","resultCheck","prepend","names","after","params","before","clear","should","noResult","a","setResult","exit","leftType","rightType","leftIsArray","rightIsArray","children","child","childName","_t","arraysHaveMatchByRef","array1","array2","len1","len2","index1","val1","index2","val2","matchItems","value1","value2","objectHash","matchByPosition","hash1","hash2","hashCache1","hashCache2","lcs","ARRAY_MOVE","arrayIndexOf","item","matchContext","commonHead","commonTail","trimmed1","trimmed2","seq","removedItems","indices1","detectMove","includeValueOnMove","removedItemsLength","indexOnArray2","indices2","isMove","removeItemIndex1","compare","numerically","b","numericallyBy","toRemove","toInsert","toModify","parseInt","sort","indexDiff","removedValue","toInsertLength","insertion","toModifyLength","modification","newName","reverseArrayDeltaIndex","itemDelta","reverseIndex","deltaIndex","deltaItem","moveFromIndex","moveToIndex","deleteIndex","getTime","TEXT_DIFF","DEFAULT_MIN_LENGTH","cachedDiffPatch","getDiffMatchPatch","instance","dmpModuleName","dmp","diff_match_patch_not_found","txt1","txt2","patch_toText","patch_make","results","patch_apply","patch_fromText","textPatchFailed","minLength","textDiff","textDeltaReverse","lines","lineTmp","lineHeader","lineAdd","lineRemove","header","headerRegex","lineStart","switchTo","parent","defaultMatch","lengthMatrix","y","matrix","backtrack","sequence","subsequence","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","DIFF_DELETE","DIFF_INSERT","DIFF_EQUAL","Diff","diff_main","text1","text2","opt_checklines","opt_deadline","MAX_VALUE","deadline","checklines","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","diff_compute_","diff_cleanupMerge","longtext","shorttext","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","concat","diff_lineMode_","diff_bisect_","diff_linesToChars_","linearray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","j","text1_length","text2_length","max_d","ceil","v_offset","v_length","v1","v2","front","k1start","k1end","k2start","k2end","k1","x1","k1_offset","y1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","diff_linesToCharsMunge_","text","chars","lineEnd","lineArrayLength","lineArray","lineHash","fromCharCode","chars1","chars2","charCodeAt","pointermin","pointermax","min","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","pattern","found","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","changes","equalities","equalitiesLength","lastequality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","overlap_length","diff_cleanupSemanticScore_","one","two","score","punctuation","whitespace","linebreak","blanklineEnd","blanklineStart","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","op","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","tokens","param","decodeURI","ex","match_main","match_bitap_","match_bitapScore_","accuracy","proximity","abs","s","match_alphabet_","score_threshold","best_loc","lastIndexOf","matchmask","bin_min","bin_mid","last_rd","bin_max","start","finish","rd","charMatch","patch_addContext_","start2","length1","padding","prefix","suffix","start1","length2","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","nullPadding","patch_addPadding","patch_splitMax","start_loc","expected_loc","end_loc","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","postcontext","textline","textPointer","patchHeader","sign","coords1","coords2"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(e){var r=require(\"./doc\").Doc,o=require(\"./peer\").Peer,t=require(\"./storage\").Storage;exports.Doc=r,exports.Peer=o,exports.Storage=t,exports.jsondiffpatch=require(\"jsondiffpatch\");var p=\"undefined\"!=typeof e&&\"string\"==typeof e.execPath;p||(exports.homepage=\"{{package-homepage}}\",exports.version=\"{{package-version}}\")}).call(this,require(\"_process\"));","var jsondiffpatch = require('jsondiffpatch');\n\nfunction Doc(root, version) {\n  this.root = typeof root === 'undefined' ? null : root;\n  this.version = version || 0;\n}\n\nDoc.prototype.clone = function () {\n  var doc = new Doc(\n    JSON.parse(JSON.stringify(this.root), jsondiffpatch.dateReviver),\n    this.version\n  );\n  doc.url = this.url;\n  return doc;\n};\n\nDoc.empty = new Doc(null, 0);\nDoc.empty.isEmpty = true;\n\nDoc.notFound = new Doc(null, 0);\nDoc.notFound.notFound = true;\n\nexports.Doc = Doc;\n","\nvar Doc = require('./doc').Doc;\n\nfunction Storage(documents) {\n  // base implementation is in-memory\n  this.documents = documents || {};\n}\n\nStorage.prototype.get = function (url, options, callback) {\n  if (!this.documents || !this.documents[url]) {\n    if (!options || !options.create) {\n      var err = new Error('document not found');\n      err.notFound = true;\n      err.url = url;\n      callback(err);\n      return;\n    }\n    this.documents[url] = {};\n  }\n  var doc = this.documents[url];\n  if (!(doc instanceof Doc)) {\n    doc = this.documents[url] = new Doc(doc);\n  }\n  doc.url = url;\n  callback(null, doc);\n};\n\nStorage.prototype.put = function (url, doc, options, callback) {\n  if (!this.documents) {\n    this.documents = {};\n  }\n  if (!(doc instanceof Doc)) {\n    doc = new Doc(doc);\n  }\n  doc.url = url;\n  this.documents[url] = doc.clone();\n  callback(null, url);\n};\n\nexports.Storage = Storage;\n","// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n","var util = require('util');\nvar events = require('events');\nvar jsondiffpatch = require('jsondiffpatch');\nvar jsondiffpatch = require('jsondiffpatch');\nif (process.browser) {\n  /* jshint ignore: start */\n  window.diff_match_patch = window.diff_match_patch || require('jsondiffpatch/public/external/diff_match_patch_uncompressed');\n  /* jshint ignore: end */\n}\n\nvar Doc = require('./doc').Doc;\n\nfunction Peer(name, document){\n  events.EventEmitter.call(this);\n  if (name instanceof Doc) {\n    this.document = name;\n  } else {\n    this.name = name;\n    this.document = document || Doc.empty;\n  }\n  this.counters = {\n    messages: {\n      sent: 0,\n      received: 0\n    }\n  };\n  this.createShadow();\n  this.watchInterval = Peer.defaults.watchInterval;\n  this.debug = Peer.defaults.debug;\n}\nutil.inherits(Peer, events.EventEmitter);\n\nPeer.defaults = {\n  watchInterval: 100,\n  debug: false\n};\n\nPeer.prototype.log = function() {\n  if (this.debug) {\n    var args = Array.prototype.slice.apply(arguments);\n    args.unshift('[Peer ' + this.name + ']');\n    console.log.apply(console, args);\n  }\n};\n\nPeer.prototype.syncBroken = function () {\n  if (!this.synchronized) {\n    return;\n  }\n  this.synchronized = false;\n  this.emit('unsync');\n  this.stop();\n};\n\nPeer.prototype.syncComplete = function () {\n  if (this.synchronized) {\n    return;\n  }\n  this.synchronized = true;\n  this.log('sync complete');\n  this.watch();\n  this.emit('sync');\n};\n\nPeer.prototype.use = function(doc) {\n  this.log('document loaded locally:', doc.url);\n  this.document = doc;\n  this.createShadow();\n  this.emit('loaded');\n  var req = this.documentRequest;\n  if (req) {\n    this.documentRequest = null;\n    if (req.callback) {\n      req.callback();\n    }\n  }\n  this.syncComplete();\n};\n\nPeer.prototype.load = function(url, options, callback) {\n  var opt = options || {};\n  var self = this;\n  if (typeof options === 'function') {\n    callback = options;\n    opt = {};\n  }\n  this.documentRequest = {\n    url: url,\n    options: opt,\n    callback: callback\n  };\n  if (opt && opt.local) {\n    this.emit('load', url, callback);\n    if (!this.loading) {\n      if (this.storage) {\n        this.loading = true;\n        this.storage.get(url, opt, function(err, doc) {\n          self.loading = false;\n          if (err) {\n            callback(err);\n            return;\n          }\n          self.use(doc);\n        });\n        return;\n      }\n      this.log('no document loader for', url);\n      callback(new Error('no document loader'));\n    }\n  } else {\n    this.scan();\n  }\n};\n\nPeer.prototype.save = function(url, options, callback) {\n  var opt = options || {};\n  var self = this;\n  if (typeof options === 'function') {\n    callback = options;\n    opt = {};\n  }\n  this.saveRequest = {\n    url: url,\n    options: opt,\n    callback: callback\n  };\n  this.emit('save', url, callback);\n  if (!this.saving) {\n    if (this.storage) {\n      this.saving = true;\n      this.storage.put(url, this.document, options, function(err, url) {\n        self.saving = false;\n        if (err) {\n          callback(err);\n          return;\n        }\n        self.document.url = url;\n        self.saved();\n      });\n      return;\n    }\n    this.log('no document saver for', url);\n    callback(new Error('no document saver'));\n  }\n};\n\nPeer.prototype.saved = function() {\n  var doc = this.document;\n  this.log('document saved locally:', doc.url);\n  var req = this.saveRequest;\n  if (req) {\n    this.saveRequest = null;\n    if (req.callback) {\n      req.callback();\n    }\n  }\n};\n\nPeer.prototype.createShadow = function() {\n  this.shadow = this.document.clone();\n};\n\nPeer.prototype.send = function(message) {\n  this.counters.messages.sent++;\n  this.emit('message', message);\n  this.lastSent = message;\n  this.waitingResponse = true;\n};\n\nPeer.prototype.receive = function(message) {\n  var self = this;\n  this.waitingResponse = false;\n  this.responding = true;\n  this.counters.messages.received++;\n  message.responseTo = this.lastSent;\n  this.respond(message, function(err, response){\n    if (err) {\n      self.send({ error: err });\n      self.responding = false;\n      return;\n    }\n    if (response) {\n      self.send(response);\n    }\n    self.responding = false;\n  });\n};\n\nPeer.prototype.isBusy = function () {\n  return this.waitingResponse || this.responding;\n};\n\nPeer.prototype.scan = function(){\n  var self = this;\n  if (this.responding) {\n    return;\n  }\n\n  if (!this.waitingResponse && this.documentRequest) {\n    if (!this.documentRequest.options.local && !this.documentRequest.sent) {\n      this.log('requesting document', this.documentRequest.url);\n      this.send({\n        load: true,\n        url: this.documentRequest.url,\n        options: this.documentRequest.options\n      });\n      this.documentRequest.sent = true;\n    }\n    return;\n  }\n\n  if (!this.waitingResponse && this.saveRequest) {\n    if (!this.saveRequest.options.local && !this.saveRequest.sent) {\n      this.log('requesting to save document as', this.saveRequest.url);\n      this.send({\n        save: true,\n        url: this.saveRequest.url,\n        options: this.saveRequest.options\n      });\n      this.saveRequest.sent = true;\n    }\n    return;\n  }\n\n  this.getChanges(function(delta) {\n    if (!delta) {\n      return;\n    }\n    self.syncBroken();\n    if (self.isBusy()) {\n      self.log('ping');\n      self.send({ ping: true });\n      return;\n    }\n    self.document.version++;\n    self.createShadow();\n    self.send({\n      delta: delta,\n      version: self.document.version\n    });\n  });\n};\n\nPeer.prototype.watch = function () {\n  if (this.watchTimer) {\n    return;\n  }\n  var self = this;\n  this.watchTimer = setInterval(function(){\n    if (self.isPaused) {\n      return;\n    }\n    self.scan({ source: 'watch' });\n  }, Math.max(20, self.watchInterval));\n  this.log('watching...');\n};\n\nPeer.prototype.stop = function () {\n  if (!this.watchTimer) {\n    return;\n  }\n  clearInterval(this.watchTimer);\n  this.watchTimer = null;\n  this.log('watch stopped');\n};\n\nPeer.prototype.pause = function () {\n  if (this.isPaused) {\n    return;\n  }\n  this.isPaused = true;\n  this.emit('pause');\n};\n\nPeer.prototype.resume = function () {\n  if (!this.isPaused) {\n    return;\n  }\n  this.isPaused = false;\n  this.emit('resume');\n};\n\nPeer.prototype.getChanges = function (callback) {\n  // use jsondiffpatch to detect changes in document\n  var delta = jsondiffpatch.diff(this.shadow.root, this.document.root);\n  if (delta) {\n    this.log('found changes', delta);\n  }\n  callback(delta);\n};\n\nPeer.prototype.respond = function(message, callback) {\n  this.peerError = null;\n  var self = this;\n  var sendNoop = function(){\n    callback(null, { noop: true });\n  };\n\n  var req;\n\n  // respond to peer error\n  if (message.error) {\n    this.log('got peer error: ' + message.error);\n    this.peerError = message.error;\n    callback();\n    return;\n  }\n\n  // respond to a delta\n  if (message.delta) {\n    this.log('patching...');\n    try {\n      // exact patch\n      this.shadow.root = jsondiffpatch.patch(this.shadow.root, message.delta);\n    } catch (err) {\n      // out-of-sync TODO: reload the full doc\n      this.log('patch error: ', err);\n    }\n    try {\n      // best-effort patch\n      this.document.root = jsondiffpatch.patch(this.document.root, message.delta);\n    } catch (err) {\n      this.log('patch error (best-effort): ', err);\n    }\n    if (message.version && this.document.version <= message.version) {\n      this.document.version = message.version;\n    } else {\n      this.document.version++;\n    }\n    this.log('result:', this.document);\n    this.emit('change');\n  }\n\n  // respond to noop (peer has no changes)\n  if (message.noop) {\n    this.log('got noop');\n    // no changes on the other peer\n    if ((message.responseTo && message.responseTo.noop) && !this.alwaysRespondNoops) {\n      this.syncComplete();\n      callback();\n      return;\n    }\n  }\n\n  // respond to ping (peer wants to send a message, but is waiting for response)\n  if (message.ping) {\n    this.log('got ping');\n    if (this.waitingResponse) {\n      this.log('ignoring ping, waiting a response');\n      callback();\n      return;\n    }\n  }\n\n  // respond to this messages sending changes (if any)\n  if (message.noop || message.delta || message.ping || message.saved) {\n    this.getChanges(function(delta) {\n      if (!delta) {\n        if (message.noop) {\n          self.syncComplete();\n        }\n        sendNoop();\n        return;\n      }\n      self.document.version++;\n      self.createShadow();\n      callback(null, {\n        delta: delta,\n        version: self.document.version\n      });\n    });\n    return;\n  }\n\n  // respond to document load request\n  if (message.load) {\n    // peer wants to load a full document\n    this.log('got document load request');\n    var url = message.url;\n    var sendDoc = function(){\n      var doc = self.document.clone();\n      self.watch();\n      callback(null, {\n        document: {\n          root: doc.root,\n          url: doc.url,\n          version: doc.version\n        }\n      });\n    };\n    if (this.document.isEmpty || (url && this.document.url !== url)) {\n      this.log('loading', url);\n      var loadOptions = message.options || {};\n      loadOptions.local = true;\n      this.load(url, loadOptions, function(err) {\n        if (err) {\n          self.log('error loading document');\n          callback(null, {\n            error: err.message,\n            url: url\n          });\n          return;\n        }\n        self.log('document loaded, sending to peer', self.document);\n        sendDoc();\n        return;\n      });\n      return;\n    }\n    this.log('sending document', this.document);\n    sendDoc();\n    return;\n  }\n\n  // respond to full document\n  if (message.document) {\n    // peer sent the full document\n    req = this.documentRequest;\n    if (req && req.sent) {\n      this.documentRequest = null;\n    }\n    if (message.error) {\n      this.log('document load error');\n      callback();\n      return;\n    }\n    this.document = new Doc(message.document.root, message.document.version);\n    this.document.url = message.document.url;\n    this.createShadow();\n    this.log('got document', this.document);\n    this.emit('loaded');\n    this.syncComplete();\n    callback();\n    if (req && req.callback) {\n      req.callback();\n    }\n    return;\n  }\n\n  // respond to unexpected message\n  this.log('error', 'unexpected message', message);\n  callback(new Error('unexpected message'));\n};\n\nPeer.prototype.bindTo = function (peer, options) {\n  var self = this;\n  if (peer && typeof peer.on === 'function') {\n    var artificialDelay = Math.max(options && options.artificialDelay, 1);\n    peer.on('message', function(message) {\n      setTimeout(function(){\n        self.receive(message);\n      }, artificialDelay);\n    });\n    this.boundTo = peer;\n    if (peer instanceof Peer && !peer.boundTo) {\n      peer.bindTo(self, options);\n    }\n    return;\n  }\n  throw new Error('unsupported bind target');\n};\n\nexports.Peer = Peer;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","\nvar environment = require('./environment');\n\nvar DiffPatcher = require('./diffpatcher').DiffPatcher;\nexports.DiffPatcher = DiffPatcher;\n\nexports.create = function(options){\n\treturn new DiffPatcher(options);\n};\n\nexports.dateReviver = require('./date-reviver');\n\nvar defaultInstance;\n\nexports.diff = function() {\n\tif (!defaultInstance) {\n\t\tdefaultInstance = new DiffPatcher();\n\t}\n\treturn defaultInstance.diff.apply(defaultInstance, arguments);\n};\n\nexports.patch = function() {\n\tif (!defaultInstance) {\n\t\tdefaultInstance = new DiffPatcher();\n\t}\n\treturn defaultInstance.patch.apply(defaultInstance, arguments);\n};\n\nexports.unpatch = function() {\n\tif (!defaultInstance) {\n\t\tdefaultInstance = new DiffPatcher();\n\t}\n\treturn defaultInstance.unpatch.apply(defaultInstance, arguments);\n};\n\nexports.reverse = function() {\n\tif (!defaultInstance) {\n\t\tdefaultInstance = new DiffPatcher();\n\t}\n\treturn defaultInstance.reverse.apply(defaultInstance, arguments);\n};\n\nif (environment.isBrowser) {\n\texports.homepage = '{{package-homepage}}';\n\texports.version = '{{package-version}}';\n} else {\n\tvar packageInfoModuleName = '../package.json';\n\tvar packageInfo = require(packageInfoModuleName);\n\texports.homepage = packageInfo.homepage;\n\texports.version = packageInfo.version;\n\n\tvar formatterModuleName = './formatters';\n\tvar formatters = require(formatterModuleName);\n\texports.formatters = formatters;\n\t// shortcut for console\n\texports.console = formatters.console;\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","\nexports.isBrowser = typeof window !== 'undefined';\n","var Processor = require('./processor').Processor;\nvar Pipe = require('./pipe').Pipe;\nvar DiffContext = require('./contexts/diff').DiffContext;\nvar PatchContext = require('./contexts/patch').PatchContext;\nvar ReverseContext = require('./contexts/reverse').ReverseContext;\n\nvar trivial = require('./filters/trivial');\nvar nested = require('./filters/nested');\nvar arrays = require('./filters/arrays');\nvar dates = require('./filters/dates');\nvar texts = require('./filters/texts');\n\nvar DiffPatcher = function DiffPatcher(options) {\n  this.processor = new Processor(options);\n  this.processor.pipe(new Pipe('diff').append(\n    nested.collectChildrenDiffFilter,\n    trivial.diffFilter,\n    dates.diffFilter,\n    texts.diffFilter,\n    nested.objectsDiffFilter,\n    arrays.diffFilter\n  ).shouldHaveResult());\n  this.processor.pipe(new Pipe('patch').append(\n    nested.collectChildrenPatchFilter,\n    arrays.collectChildrenPatchFilter,\n    trivial.patchFilter,\n    texts.patchFilter,\n    nested.patchFilter,\n    arrays.patchFilter\n  ).shouldHaveResult());\n  this.processor.pipe(new Pipe('reverse').append(\n    nested.collectChildrenReverseFilter,\n    arrays.collectChildrenReverseFilter,\n    trivial.reverseFilter,\n    texts.reverseFilter,\n    nested.reverseFilter,\n    arrays.reverseFilter\n  ).shouldHaveResult());\n};\n\nDiffPatcher.prototype.options = function() {\n  return this.processor.options.apply(this.processor, arguments);\n};\n\nDiffPatcher.prototype.diff = function(left, right) {\n  return this.processor.process(new DiffContext(left, right));\n};\n\nDiffPatcher.prototype.patch = function(left, delta) {\n  return this.processor.process(new PatchContext(left, delta));\n};\n\nDiffPatcher.prototype.reverse = function(delta) {\n  return this.processor.process(new ReverseContext(delta));\n};\n\nDiffPatcher.prototype.unpatch = function(right, delta) {\n  return this.patch(right, this.reverse(delta));\n};\n\nexports.DiffPatcher = DiffPatcher;\n","// use as 2nd parameter for JSON.parse to revive Date instances\nmodule.exports = function dateReviver(key, value) {\n  var parts;\n  if (typeof value === 'string') {\n    parts = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d*))?(Z|([+\\-])(\\d{2}):(\\d{2}))$/.exec(value);\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +(parts[7] || 0)));\n    }\n  }\n  return value;\n};\n","\nvar Processor = function Processor(options){\n\tthis.selfOptions = options;\n\tthis.pipes = {};\n};\n\nProcessor.prototype.options = function(options) {\n\tif (options) {\n\t\tthis.selfOptions = options;\n\t}\n\treturn this.selfOptions;\n};\n\nProcessor.prototype.pipe = function(name, pipe) {\n\tif (typeof name === 'string') {\n\t\tif (typeof pipe === 'undefined') {\n\t\t\treturn this.pipes[name];\n\t\t} else {\n\t\t\tthis.pipes[name] = pipe;\n\t\t}\n\t}\n\tif (name && name.name) {\n\t\tpipe = name;\n\t\tif (pipe.processor === this) { return pipe; }\n\t\tthis.pipes[pipe.name] = pipe;\n\t}\n\tpipe.processor = this;\n\treturn pipe;\n};\n\nProcessor.prototype.process = function(input, pipe) {\n\tvar context = input;\n\tcontext.options = this.options();\n\tvar nextPipe = pipe || input.pipe || 'default';\n\tvar lastPipe, lastContext;\n\twhile (nextPipe) {\n\t\tif (typeof context.nextAfterChildren !== 'undefined') {\n\t\t\t// children processed and coming back to parent\n\t\t\tcontext.next = context.nextAfterChildren;\n\t\t\tcontext.nextAfterChildren = null;\n\t\t}\n\n\t\tif (typeof nextPipe === 'string') {\n\t\t\tnextPipe = this.pipe(nextPipe);\n\t\t}\n\t\tnextPipe.process(context);\n\t\tlastContext = context;\n\t\tlastPipe = nextPipe;\n\t\tnextPipe = null;\n\t\tif (context) {\n\t\t\tif (context.next) {\n\t\t\t\tcontext = context.next;\n\t\t\t\tnextPipe = lastContext.nextPipe || context.pipe || lastPipe;\n\t\t\t}\n\t\t}\n\t}\n\treturn context.hasResult ? context.result : undefined;\n};\n\nexports.Processor = Processor;\n","var Context = require('./context').Context;\n\nvar DiffContext = function DiffContext(left, right) {\n  this.left = left;\n  this.right = right;\n  this.pipe = 'diff';\n};\n\nDiffContext.prototype = new Context();\n\nexports.DiffContext = DiffContext;\n","var Pipe = function Pipe(name) {\n  this.name = name;\n  this.filters = [];\n};\n\nPipe.prototype.process = function(input) {\n  if (!this.processor) {\n    throw new Error('add this pipe to a processor before using it');\n  }\n  var debug = this.debug;\n  var length = this.filters.length;\n  var context = input;\n  for (var index = 0; index < length; index++) {\n    var filter = this.filters[index];\n    if (debug) {\n      this.log('filter: ' + filter.filterName);\n    }\n    filter(context);\n    if (typeof context === 'object' && context.exiting) {\n      context.exiting = false;\n      break;\n    }\n  }\n  if (!context.next && this.resultCheck) {\n    this.resultCheck(context);\n  }\n};\n\nPipe.prototype.log = function(msg) {\n  console.log('[jsondiffpatch] ' + this.name + ' pipe, ' + msg);\n};\n\nPipe.prototype.append = function() {\n  this.filters.push.apply(this.filters, arguments);\n  return this;\n};\n\nPipe.prototype.prepend = function() {\n  this.filters.unshift.apply(this.filters, arguments);\n  return this;\n};\n\nPipe.prototype.indexOf = function(filterName) {\n  if (!filterName) {\n    throw new Error('a filter name is required');\n  }\n  for (var index = 0; index < this.filters.length; index++) {\n    var filter = this.filters[index];\n    if (filter.filterName === filterName) {\n      return index;\n    }\n  }\n  throw new Error('filter not found: ' + filterName);\n};\n\nPipe.prototype.list = function() {\n  var names = [];\n  for (var index = 0; index < this.filters.length; index++) {\n    var filter = this.filters[index];\n    names.push(filter.filterName);\n  }\n  return names;\n};\n\nPipe.prototype.after = function(filterName) {\n  var index = this.indexOf(filterName);\n  var params = Array.prototype.slice.call(arguments, 1);\n  if (!params.length) {\n    throw new Error('a filter is required');\n  }\n  params.unshift(index + 1, 0);\n  Array.prototype.splice.apply(this.filters, params);\n  return this;\n};\n\nPipe.prototype.before = function(filterName) {\n  var index = this.indexOf(filterName);\n  var params = Array.prototype.slice.call(arguments, 1);\n  if (!params.length) {\n    throw new Error('a filter is required');\n  }\n  params.unshift(index, 0);\n  Array.prototype.splice.apply(this.filters, params);\n  return this;\n};\n\nPipe.prototype.clear = function() {\n  this.filters.length = 0;\n  return this;\n};\n\nPipe.prototype.shouldHaveResult = function(should) {\n  if (should === false) {\n    this.resultCheck = null;\n    return;\n  }\n  if (this.resultCheck) {\n    return;\n  }\n  var pipe = this;\n  this.resultCheck = function(context) {\n    if (!context.hasResult) {\n      console.log(context);\n      var error = new Error(pipe.name + ' failed');\n      error.noResult = true;\n      throw error;\n    }\n  };\n  return this;\n};\n\nexports.Pipe = Pipe;\n","var Context = require('./context').Context;\n\nvar PatchContext = function PatchContext(left, delta) {\n  this.left = left;\n  this.delta = delta;\n  this.pipe = 'patch';\n};\n\nPatchContext.prototype = new Context();\n\nexports.PatchContext = PatchContext;\n","var isArray = (typeof Array.isArray === 'function') ?\n  // use native function\n  Array.isArray :\n  // use instanceof operator\n  function(a) {\n    return a instanceof Array;\n  };\n\nvar diffFilter = function trivialMatchesDiffFilter(context) {\n  if (context.left === context.right) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  if (typeof context.left === 'undefined') {\n    if (typeof context.right === 'function') {\n      throw new Error('functions are not supported');\n    }\n    context.setResult([context.right]).exit();\n    return;\n  }\n  if (typeof context.right === 'undefined') {\n    context.setResult([context.left, 0, 0]).exit();\n    return;\n  }\n  if (typeof context.left === 'function' || typeof context.right === 'function') {\n    throw new Error('functions are not supported');\n  }\n  context.leftType = context.left === null ? 'null' : typeof context.left;\n  context.rightType = context.right === null ? 'null' : typeof context.right;\n  if (context.leftType !== context.rightType) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'boolean' || context.leftType === 'number') {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'object') {\n    context.leftIsArray = isArray(context.left);\n  }\n  if (context.rightType === 'object') {\n    context.rightIsArray = isArray(context.right);\n  }\n  if (context.leftIsArray !== context.rightIsArray) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n};\ndiffFilter.filterName = 'trivial';\n\nvar patchFilter = function trivialMatchesPatchFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.nested = !isArray(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult(context.delta[0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    context.setResult(context.delta[1]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult(undefined).exit();\n    return;\n  }\n};\npatchFilter.filterName = 'trivial';\n\nvar reverseFilter = function trivialReferseFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.delta).exit();\n    return;\n  }\n  context.nested = !isArray(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult([context.delta[0], 0, 0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    context.setResult([context.delta[1], context.delta[0]]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult([context.delta[0]]).exit();\n    return;\n  }\n};\nreverseFilter.filterName = 'trivial';\n\nexports.diffFilter = diffFilter;\nexports.patchFilter = patchFilter;\nexports.reverseFilter = reverseFilter;\n","var Context = require('./context').Context;\n\nvar ReverseContext = function ReverseContext(delta) {\n  this.delta = delta;\n  this.pipe = 'reverse';\n};\n\nReverseContext.prototype = new Context();\n\nexports.ReverseContext = ReverseContext;\n","var DiffContext = require('../contexts/diff').DiffContext;\nvar PatchContext = require('../contexts/patch').PatchContext;\nvar ReverseContext = require('../contexts/reverse').ReverseContext;\n\nvar collectChildrenDiffFilter = function collectChildrenDiffFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  var length = context.children.length;\n  var child;\n  var result = context.result;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (typeof child.result === 'undefined') {\n      continue;\n    }\n    result = result || {};\n    result[child.childName] = child.result;\n  }\n  if (result && context.leftIsArray) {\n    result._t = 'a';\n  }\n  context.setResult(result).exit();\n};\ncollectChildrenDiffFilter.filterName = 'collectChildren';\n\nvar objectsDiffFilter = function objectsDiffFilter(context) {\n  if (context.leftIsArray || context.leftType !== 'object') {\n    return;\n  }\n\n  var name, child;\n  for (name in context.left) {\n    child = new DiffContext(context.left[name], context.right[name]);\n    context.push(child, name);\n  }\n  for (name in context.right) {\n    if (typeof context.left[name] === 'undefined') {\n      child = new DiffContext(undefined, context.right[name]);\n      context.push(child, name);\n    }\n  }\n\n  if (!context.children || context.children.length === 0) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  context.exit();\n};\nobjectsDiffFilter.filterName = 'objects';\n\nvar patchFilter = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name, child;\n  for (name in context.delta) {\n    child = new PatchContext(context.left[name], context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\npatchFilter.filterName = 'objects';\n\nvar collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (context.left.hasOwnProperty(child.childName) && child.result === undefined) {\n      delete context.left[child.childName];\n    } else if (context.left[child.childName] !== child.result) {\n      context.left[child.childName] = child.result;\n    }\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter.filterName = 'collectChildren';\n\nvar reverseFilter = function nestedReverseFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name, child;\n  for (name in context.delta) {\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter.filterName = 'objects';\n\nvar collectChildrenReverseFilter = function collectChildrenReverseFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child;\n  var delta = {};\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (delta[child.childName] !== child.result) {\n      delta[child.childName] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n};\ncollectChildrenReverseFilter.filterName = 'collectChildren';\n\nexports.collectChildrenDiffFilter = collectChildrenDiffFilter;\nexports.objectsDiffFilter = objectsDiffFilter;\nexports.patchFilter = patchFilter;\nexports.collectChildrenPatchFilter = collectChildrenPatchFilter;\nexports.reverseFilter = reverseFilter;\nexports.collectChildrenReverseFilter = collectChildrenReverseFilter;\n","var DiffContext = require('../contexts/diff').DiffContext;\nvar PatchContext = require('../contexts/patch').PatchContext;\nvar ReverseContext = require('../contexts/reverse').ReverseContext;\n\nvar lcs = require('./lcs');\n\nvar ARRAY_MOVE = 3;\n\nvar isArray = (typeof Array.isArray === 'function') ?\n  // use native function\n  Array.isArray :\n  // use instanceof operator\n  function(a) {\n    return a instanceof Array;\n  };\n\nvar arrayIndexOf = typeof Array.prototype.indexOf === 'function' ?\n  function(array, item) {\n    return array.indexOf(item);\n  } : function(array, item) {\n    var length = array.length;\n    for (var i = 0; i < length; i++) {\n      if (array[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\nfunction arraysHaveMatchByRef(array1, array2, len1, len2) {\n  for (var index1 = 0; index1 < len1; index1++) {\n    var val1 = array1[index1];\n    for (var index2 = 0; index2 < len2; index2++) {\n      var val2 = array2[index2];\n      if (val1 === val2) {\n        return true;\n      }\n    }\n  }\n}\n\nfunction matchItems(array1, array2, index1, index2, context) {\n  var value1 = array1[index1];\n  var value2 = array2[index2];\n  if (value1 === value2) {\n    return true;\n  }\n  if (typeof value1 !== 'object' || typeof value2 !== 'object') {\n    return false;\n  }\n  var objectHash = context.objectHash;\n  if (!objectHash) {\n    // no way to match objects was provided, try match by position\n    return context.matchByPosition && index1 === index2;\n  }\n  var hash1;\n  var hash2;\n  if (typeof index1 === 'number') {\n    context.hashCache1 = context.hashCache1 || [];\n    hash1 = context.hashCache1[index1];\n    if (typeof hash1 === 'undefined') {\n      context.hashCache1[index1] = hash1 = objectHash(value1, index1);\n    }\n  } else {\n    hash1 = objectHash(value1);\n  }\n  if (typeof hash1 === 'undefined') {\n    return false;\n  }\n  if (typeof index2 === 'number') {\n    context.hashCache2 = context.hashCache2 || [];\n    hash2 = context.hashCache2[index2];\n    if (typeof hash2 === 'undefined') {\n      context.hashCache2[index2] = hash2 = objectHash(value2, index2);\n    }\n  } else {\n    hash2 = objectHash(value2);\n  }\n  if (typeof hash2 === 'undefined') {\n    return false;\n  }\n  return hash1 === hash2;\n}\n\nvar diffFilter = function arraysDiffFilter(context) {\n  if (!context.leftIsArray) {\n    return;\n  }\n\n  var matchContext = {\n    objectHash: context.options && context.options.objectHash,\n    matchByPosition: context.options && context.options.matchByPosition\n  };\n  var commonHead = 0;\n  var commonTail = 0;\n  var index;\n  var index1;\n  var index2;\n  var array1 = context.left;\n  var array2 = context.right;\n  var len1 = array1.length;\n  var len2 = array2.length;\n\n  var child;\n\n  if (len1 > 0 && len2 > 0 && !matchContext.objectHash &&\n    typeof matchContext.matchByPosition !== 'boolean') {\n    matchContext.matchByPosition = !arraysHaveMatchByRef(array1, array2, len1, len2);\n  }\n\n  // separate common head\n  while (commonHead < len1 && commonHead < len2 &&\n    matchItems(array1, array2, commonHead, commonHead, matchContext)) {\n    index = commonHead;\n    child = new DiffContext(context.left[index], context.right[index]);\n    context.push(child, index);\n    commonHead++;\n  }\n  // separate common tail\n  while (commonTail + commonHead < len1 && commonTail + commonHead < len2 &&\n    matchItems(array1, array2, len1 - 1 - commonTail, len2 - 1 - commonTail, matchContext)) {\n    index1 = len1 - 1 - commonTail;\n    index2 = len2 - 1 - commonTail;\n    child = new DiffContext(context.left[index1], context.right[index2]);\n    context.push(child, index2);\n    commonTail++;\n  }\n  var result;\n  if (commonHead + commonTail === len1) {\n    if (len1 === len2) {\n      // arrays are identical\n      context.setResult(undefined).exit();\n      return;\n    }\n    // trivial case, a block (1 or more consecutive items) was added\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len2 - commonTail; index++) {\n      result[index] = [array2[index]];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  if (commonHead + commonTail === len2) {\n    // trivial case, a block (1 or more consecutive items) was removed\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len1 - commonTail; index++) {\n      result['_' + index] = [array1[index], 0, 0];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  // reset hash cache\n  delete matchContext.hashCache1;\n  delete matchContext.hashCache2;\n\n  // diff is not trivial, find the LCS (Longest Common Subsequence)\n  var trimmed1 = array1.slice(commonHead, len1 - commonTail);\n  var trimmed2 = array2.slice(commonHead, len2 - commonTail);\n  var seq = lcs.get(\n    trimmed1, trimmed2,\n    matchItems,\n    matchContext\n  );\n  var removedItems = [];\n  result = result || {\n    _t: 'a'\n  };\n  for (index = commonHead; index < len1 - commonTail; index++) {\n    if (arrayIndexOf(seq.indices1, index - commonHead) < 0) {\n      // removed\n      result['_' + index] = [array1[index], 0, 0];\n      removedItems.push(index);\n    }\n  }\n\n  var detectMove = true;\n  if (context.options && context.options.arrays && context.options.arrays.detectMove === false) {\n    detectMove = false;\n  }\n  var includeValueOnMove = false;\n  if (context.options && context.options.arrays && context.options.arrays.includeValueOnMove) {\n    includeValueOnMove = true;\n  }\n\n  var removedItemsLength = removedItems.length;\n  for (index = commonHead; index < len2 - commonTail; index++) {\n    var indexOnArray2 = arrayIndexOf(seq.indices2, index - commonHead);\n    if (indexOnArray2 < 0) {\n      // added, try to match with a removed item and register as position move\n      var isMove = false;\n      if (detectMove && removedItemsLength > 0) {\n        for (var removeItemIndex1 = 0; removeItemIndex1 < removedItemsLength; removeItemIndex1++) {\n          index1 = removedItems[removeItemIndex1];\n          if (matchItems(trimmed1, trimmed2, index1 - commonHead,\n            index - commonHead, matchContext)) {\n            // store position move as: [originalValue, newPosition, ARRAY_MOVE]\n            result['_' + index1].splice(1, 2, index, ARRAY_MOVE);\n            if (!includeValueOnMove) {\n              // don't include moved value on diff, to save bytes\n              result['_' + index1][0] = '';\n            }\n\n            index2 = index;\n            child = new DiffContext(context.left[index1], context.right[index2]);\n            context.push(child, index2);\n            removedItems.splice(removeItemIndex1, 1);\n            isMove = true;\n            break;\n          }\n        }\n      }\n      if (!isMove) {\n        // added\n        result[index] = [array2[index]];\n      }\n    } else {\n      // match, do inner diff\n      index1 = seq.indices1[indexOnArray2] + commonHead;\n      index2 = seq.indices2[indexOnArray2] + commonHead;\n      child = new DiffContext(context.left[index1], context.right[index2]);\n      context.push(child, index2);\n    }\n  }\n\n  context.setResult(result).exit();\n\n};\ndiffFilter.filterName = 'arrays';\n\nvar compare = {\n  numerically: function(a, b) {\n    return a - b;\n  },\n  numericallyBy: function(name) {\n    return function(a, b) {\n      return a[name] - b[name];\n    };\n  }\n};\n\nvar patchFilter = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var index, index1;\n\n  var delta = context.delta;\n  var array = context.left;\n\n  // first, separate removals, insertions and modifications\n  var toRemove = [];\n  var toInsert = [];\n  var toModify = [];\n  for (index in delta) {\n    if (index !== '_t') {\n      if (index[0] === '_') {\n        // removed item from original array\n        if (delta[index][2] === 0 || delta[index][2] === ARRAY_MOVE) {\n          toRemove.push(parseInt(index.slice(1), 10));\n        } else {\n          throw new Error('only removal or move can be applied at original array indices' +\n            ', invalid diff type: ' + delta[index][2]);\n        }\n      } else {\n        if (delta[index].length === 1) {\n          // added item at new array\n          toInsert.push({\n            index: parseInt(index, 10),\n            value: delta[index][0]\n          });\n        } else {\n          // modified item at new array\n          toModify.push({\n            index: parseInt(index, 10),\n            delta: delta[index]\n          });\n        }\n      }\n    }\n  }\n\n  // remove items, in reverse order to avoid sawing our own floor\n  toRemove = toRemove.sort(compare.numerically);\n  for (index = toRemove.length - 1; index >= 0; index--) {\n    index1 = toRemove[index];\n    var indexDiff = delta['_' + index1];\n    var removedValue = array.splice(index1, 1)[0];\n    if (indexDiff[2] === ARRAY_MOVE) {\n      // reinsert later\n      toInsert.push({\n        index: indexDiff[1],\n        value: removedValue\n      });\n    }\n  }\n\n  // insert items, in reverse order to avoid moving our own floor\n  toInsert = toInsert.sort(compare.numericallyBy('index'));\n  var toInsertLength = toInsert.length;\n  for (index = 0; index < toInsertLength; index++) {\n    var insertion = toInsert[index];\n    array.splice(insertion.index, 0, insertion.value);\n  }\n\n  // apply modifications\n  var toModifyLength = toModify.length;\n  var child;\n  if (toModifyLength > 0) {\n    for (index = 0; index < toModifyLength; index++) {\n      var modification = toModify[index];\n      child = new PatchContext(context.left[modification.index], modification.delta);\n      context.push(child, modification.index);\n    }\n  }\n\n  if (!context.children) {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.exit();\n};\npatchFilter.filterName = 'arrays';\n\nvar collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    context.left[child.childName] = child.result;\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter.filterName = 'arraysCollectChildren';\n\nvar reverseFilter = function arraysReverseFilter(context) {\n  if (!context.nested) {\n    if (context.delta[2] === ARRAY_MOVE) {\n      context.newName = '_' + context.delta[1];\n      context.setResult([context.delta[0], parseInt(context.childName.substr(1), 10), ARRAY_MOVE]).exit();\n    }\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var name, child;\n  for (name in context.delta) {\n    if (name === '_t') {\n      continue;\n    }\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter.filterName = 'arrays';\n\nvar reverseArrayDeltaIndex = function(delta, index, itemDelta) {\n  if (typeof index === 'string' && index[0] === '_') {\n    return parseInt(index.substr(1), 10);\n  } else if (isArray(itemDelta) && itemDelta[2] === 0) {\n    return '_' + index;\n  }\n\n  var reverseIndex = +index;\n  for (var deltaIndex in delta) {\n    var deltaItem = delta[deltaIndex];\n    if (isArray(deltaItem)) {\n      if (deltaItem[2] === ARRAY_MOVE) {\n        var moveFromIndex = parseInt(deltaIndex.substr(1), 10);\n        var moveToIndex = deltaItem[1];\n        if (moveToIndex === +index) {\n          return moveFromIndex;\n        }\n        if (moveFromIndex <= reverseIndex && moveToIndex > reverseIndex) {\n          reverseIndex++;\n        } else if (moveFromIndex >= reverseIndex && moveToIndex < reverseIndex) {\n          reverseIndex--;\n        }\n      } else if (deltaItem[2] === 0) {\n        var deleteIndex = parseInt(deltaIndex.substr(1), 10);\n        if (deleteIndex <= reverseIndex) {\n          reverseIndex++;\n        }\n      } else if (deltaItem.length === 1 && deltaIndex <= reverseIndex) {\n        reverseIndex--;\n      }\n    }\n  }\n\n  return reverseIndex;\n};\n\nvar collectChildrenReverseFilter = function collectChildrenReverseFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child;\n  var delta = {\n    _t: 'a'\n  };\n\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    var name = child.newName;\n    if (typeof name === 'undefined') {\n      name = reverseArrayDeltaIndex(context.delta, child.childName, child.result);\n    }\n    if (delta[name] !== child.result) {\n      delta[name] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n};\ncollectChildrenReverseFilter.filterName = 'arraysCollectChildren';\n\nexports.diffFilter = diffFilter;\nexports.patchFilter = patchFilter;\nexports.collectChildrenPatchFilter = collectChildrenPatchFilter;\nexports.reverseFilter = reverseFilter;\nexports.collectChildrenReverseFilter = collectChildrenReverseFilter;\n","var diffFilter = function datesDiffFilter(context) {\n  if (context.left instanceof Date) {\n    if (context.right instanceof Date) {\n      if (context.left.getTime() !== context.right.getTime()) {\n        context.setResult([context.left, context.right]);\n      } else {\n        context.setResult(undefined);\n      }\n    } else {\n      context.setResult([context.left, context.right]);\n    }\n    context.exit();\n  } else if (context.right instanceof Date) {\n    context.setResult([context.left, context.right]).exit();\n  }\n};\ndiffFilter.filterName = 'dates';\n\nexports.diffFilter = diffFilter;\n","/* global diff_match_patch */\nvar TEXT_DIFF = 2;\nvar DEFAULT_MIN_LENGTH = 60;\nvar cachedDiffPatch = null;\n\nvar getDiffMatchPatch = function() {\n  /*jshint camelcase: false */\n\n  if (!cachedDiffPatch) {\n    var instance;\n    if (typeof diff_match_patch !== 'undefined') {\n      // already loaded, probably a browser\n      instance = typeof diff_match_patch === 'function' ?\n        new diff_match_patch() : new diff_match_patch.diff_match_patch();\n    } else if (typeof require === 'function') {\n      try {\n        var dmpModuleName = 'diff_match_patch_uncompressed';\n        var dmp = require('../../public/external/' + dmpModuleName);\n        instance = new dmp.diff_match_patch();\n      } catch (err) {\n        instance = null;\n      }\n    }\n    if (!instance) {\n      var error = new Error('text diff_match_patch library not found');\n      error.diff_match_patch_not_found = true;\n      throw error;\n    }\n    cachedDiffPatch = {\n      diff: function(txt1, txt2) {\n        return instance.patch_toText(instance.patch_make(txt1, txt2));\n      },\n      patch: function(txt1, patch) {\n        var results = instance.patch_apply(instance.patch_fromText(patch), txt1);\n        for (var i = 0; i < results[1].length; i++) {\n          if (!results[1][i]) {\n            var error = new Error('text patch failed');\n            error.textPatchFailed = true;\n          }\n        }\n        return results[0];\n      }\n    };\n  }\n  return cachedDiffPatch;\n};\n\nvar diffFilter = function textsDiffFilter(context) {\n  if (context.leftType !== 'string') {\n    return;\n  }\n  var minLength = (context.options && context.options.textDiff &&\n    context.options.textDiff.minLength) || DEFAULT_MIN_LENGTH;\n  if (context.left.length < minLength ||\n    context.right.length < minLength) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  // large text, use a text-diff algorithm\n  var diff = getDiffMatchPatch().diff;\n  context.setResult([diff(context.left, context.right), 0, TEXT_DIFF]).exit();\n};\ndiffFilter.filterName = 'texts';\n\nvar patchFilter = function textsPatchFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-patch algorithm\n  var patch = getDiffMatchPatch().patch;\n  context.setResult(patch(context.left, context.delta[0])).exit();\n};\npatchFilter.filterName = 'texts';\n\nvar textDeltaReverse = function(delta) {\n  var i, l, lines, line, lineTmp, header = null,\n    headerRegex = /^@@ +\\-(\\d+),(\\d+) +\\+(\\d+),(\\d+) +@@$/,\n    lineHeader, lineAdd, lineRemove;\n  lines = delta.split('\\n');\n  for (i = 0, l = lines.length; i < l; i++) {\n    line = lines[i];\n    var lineStart = line.slice(0, 1);\n    if (lineStart === '@') {\n      header = headerRegex.exec(line);\n      lineHeader = i;\n      lineAdd = null;\n      lineRemove = null;\n\n      // fix header\n      lines[lineHeader] = '@@ -' + header[3] + ',' + header[4] + ' +' + header[1] + ',' + header[2] + ' @@';\n    } else if (lineStart === '+') {\n      lineAdd = i;\n      lines[i] = '-' + lines[i].slice(1);\n      if (lines[i - 1].slice(0, 1) === '+') {\n        // swap lines to keep default order (-+)\n        lineTmp = lines[i];\n        lines[i] = lines[i - 1];\n        lines[i - 1] = lineTmp;\n      }\n    } else if (lineStart === '-') {\n      lineRemove = i;\n      lines[i] = '+' + lines[i].slice(1);\n    }\n  }\n  return lines.join('\\n');\n};\n\nvar reverseFilter = function textsReverseFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-diff algorithm\n  context.setResult([textDeltaReverse(context.delta[0]), 0, TEXT_DIFF]).exit();\n};\nreverseFilter.filterName = 'texts';\n\nexports.diffFilter = diffFilter;\nexports.patchFilter = patchFilter;\nexports.reverseFilter = reverseFilter;\n","\nvar Pipe = require('../pipe').Pipe;\n\nvar Context = function Context(){\n};\n\nContext.prototype.setResult = function(result) {\n\tthis.result = result;\n\tthis.hasResult = true;\n\treturn this;\n};\n\nContext.prototype.exit = function() {\n\tthis.exiting = true;\n\treturn this;\n};\n\nContext.prototype.switchTo = function(next, pipe) {\n\tif (typeof next === 'string' || next instanceof Pipe) {\n\t\tthis.nextPipe = next;\n\t} else {\n\t\tthis.next = next;\n\t\tif (pipe) {\n\t\t\tthis.nextPipe = pipe;\n\t\t}\n\t}\n\treturn this;\n};\n\nContext.prototype.push = function(child, name) {\n\tchild.parent = this;\n\tif (typeof name !== 'undefined') {\n\t\tchild.childName = name;\n\t}\n\tchild.root = this.root || this;\n\tchild.options = child.options || this.options;\n\tif (!this.children) {\n\t\tthis.children = [child];\n\t\tthis.nextAfterChildren = this.next || null;\n\t\tthis.next = child;\n\t} else {\n\t\tthis.children[this.children.length - 1].next = child;\n\t\tthis.children.push(child);\n\t}\n\tchild.next = this;\n\treturn this;\n};\n\nexports.Context = Context;\n","/*\n\nLCS implementation that supports arrays or strings\n\nreference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n\n*/\n\nvar defaultMatch = function(array1, array2, index1, index2) {\n  return array1[index1] === array2[index2];\n};\n\nvar lengthMatrix = function(array1, array2, match, context) {\n  var len1 = array1.length;\n  var len2 = array2.length;\n  var x, y;\n\n  // initialize empty matrix of len1+1 x len2+1\n  var matrix = [len1 + 1];\n  for (x = 0; x < len1 + 1; x++) {\n    matrix[x] = [len2 + 1];\n    for (y = 0; y < len2 + 1; y++) {\n      matrix[x][y] = 0;\n    }\n  }\n  matrix.match = match;\n  // save sequence lengths for each coordinate\n  for (x = 1; x < len1 + 1; x++) {\n    for (y = 1; y < len2 + 1; y++) {\n      if (match(array1, array2, x - 1, y - 1, context)) {\n        matrix[x][y] = matrix[x - 1][y - 1] + 1;\n      } else {\n        matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);\n      }\n    }\n  }\n  return matrix;\n};\n\nvar backtrack = function(matrix, array1, array2, index1, index2, context) {\n  if (index1 === 0 || index2 === 0) {\n    return {\n      sequence: [],\n      indices1: [],\n      indices2: []\n    };\n  }\n\n  if (matrix.match(array1, array2, index1 - 1, index2 - 1, context)) {\n    var subsequence = backtrack(matrix, array1, array2, index1 - 1, index2 - 1, context);\n    subsequence.sequence.push(array1[index1 - 1]);\n    subsequence.indices1.push(index1 - 1);\n    subsequence.indices2.push(index2 - 1);\n    return subsequence;\n  }\n\n  if (matrix[index1][index2 - 1] > matrix[index1 - 1][index2]) {\n    return backtrack(matrix, array1, array2, index1, index2 - 1, context);\n  } else {\n    return backtrack(matrix, array1, array2, index1 - 1, index2, context);\n  }\n};\n\nvar get = function(array1, array2, match, context) {\n  context = context || {};\n  var matrix = lengthMatrix(array1, array2, match || defaultMatch, context);\n  var result = backtrack(matrix, array1, array2, array1.length, array2.length, context);\n  if (typeof array1 === 'string' && typeof array2 === 'string') {\n    result.sequence = result.sequence.join('');\n  }\n  return result;\n};\n\nexports.get = get;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/**\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nfunction diff_match_patch() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close does\n  // the contents have to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/** @typedef {!Array.<number|string>} */\ndiff_match_patch.Diff;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n  longtext = shorttext = null;  // Garbage collect.\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = /** @type {string} */(a[0]);\n  text2 = /** @type {string} */(a[1]);\n  var linearray = /** @type {!Array.<string>} */(a[2]);\n\n  var diffs = this.diff_bisect_(text1, text2, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, '']);\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          for (var j = a.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, a[j]);\n          }\n          pointer = pointer + a.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1]) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1]) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {!Array.<string|!Array.<string>>} Three element Array, containing the\n *     encoded text1, the encoded text2 and the array of unique strings.  The\n *     zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n      lineStart = lineEnd + 1;\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n    }\n    return chars;\n  }\n\n  var chars1 = diff_linesToCharsMunge_(text1);\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return [chars1, chars2, lineArray];\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var x = 0; x < diffs.length; x++) {\n    var chars = diffs[x][1];\n    var text = [];\n    for (var y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;  // Always equal to equalities[equalitiesLength-1][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = /** @type {string} */(diffs[pointer][1]);\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastequality !== null && (lastequality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastequality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = /** @type {string} */(diffs[pointer - 1][1]);\n      var insertion = /** @type {string} */(diffs[pointer][1]);\n      var overlap_length = this.diff_commonOverlap_(deletion, insertion);\n      if (overlap_length >= deletion.length / 2 ||\n          overlap_length >= insertion.length / 2) {\n        // Overlap found.  Insert an equality and trim the surrounding edits.\n        diffs.splice(pointer, 0,\n            [DIFF_EQUAL, insertion.substring(0, overlap_length)]);\n        diffs[pointer - 1][1] =\n            deletion.substring(0, deletion.length - overlap_length);\n        diffs[pointer + 1][1] = insertion.substring(overlap_length);\n        pointer++;\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  // Define some regex patterns for matching boundaries.\n  var punctuation = /[^a-zA-Z0-9]/;\n  var whitespace = /\\s/;\n  var linebreak = /[\\r\\n]/;\n  var blanklineEnd = /\\n\\r?\\n$/;\n  var blanklineStart = /^\\r?\\n\\r?\\n/;\n\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 5 (best) to 0 (worst).\n   * Closure, makes reference to regex patterns defined above.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 5;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var score = 0;\n    // One point for non-alphanumeric.\n    if (one.charAt(one.length - 1).match(punctuation) ||\n        two.charAt(0).match(punctuation)) {\n      score++;\n      // Two points for whitespace.\n      if (one.charAt(one.length - 1).match(whitespace) ||\n          two.charAt(0).match(whitespace)) {\n        score++;\n        // Three points for line breaks.\n        if (one.charAt(one.length - 1).match(linebreak) ||\n            two.charAt(0).match(linebreak)) {\n          score++;\n          // Four points for blank lines.\n          if (one.match(blanklineEnd) || two.match(blanklineStart)) {\n            score++;\n          }\n        }\n      }\n    }\n    return score;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = /** @type {string} */(diffs[pointer - 1][1]);\n      var edit = /** @type {string} */(diffs[pointer][1]);\n      var equality2 = /** @type {string} */(diffs[pointer + 1][1]);\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  var lastequality = '';  // Always equal to equalities[equalitiesLength-1][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastequality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastequality = '';\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastequality = '';\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var i = 0;\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n    if (op !== DIFF_DELETE) {\n      i += data.length;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\n        } else {\n          diffs[diffsLength++] = [DIFF_DELETE, text];\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push([DIFF_EQUAL, suffix]);\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] = patch.diffs[y].slice();\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push([DIFF_EQUAL, nullPadding]);\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 > patch_size) {\n      var bigpatch = patches[x];\n      // Remove the big old patch.\n      patches.splice(x--, 1);\n      var start1 = bigpatch.start1;\n      var start2 = bigpatch.start2;\n      var precontext = '';\n      while (bigpatch.diffs.length !== 0) {\n        // Create one of several smaller patches.\n        var patch = new diff_match_patch.patch_obj();\n        var empty = true;\n        patch.start1 = start1 - precontext.length;\n        patch.start2 = start2 - precontext.length;\n        if (precontext !== '') {\n          patch.length1 = patch.length2 = precontext.length;\n          patch.diffs.push([DIFF_EQUAL, precontext]);\n        }\n        while (bigpatch.diffs.length !== 0 &&\n               patch.length1 < patch_size - this.Patch_Margin) {\n          var diff_type = bigpatch.diffs[0][0];\n          var diff_text = bigpatch.diffs[0][1];\n          if (diff_type === DIFF_INSERT) {\n            // Insertions are harmless.\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n            patch.diffs.push(bigpatch.diffs.shift());\n            empty = false;\n          } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                     patch.diffs[0][0] == DIFF_EQUAL &&\n                     diff_text.length > 2 * patch_size) {\n            // This is a large deletion.  Let it pass in one chunk.\n            patch.length1 += diff_text.length;\n            start1 += diff_text.length;\n            empty = false;\n            patch.diffs.push([diff_type, diff_text]);\n            bigpatch.diffs.shift();\n          } else {\n            // Deletion or equality.  Only take as much as we can stomach.\n            diff_text = diff_text.substring(0,\n                patch_size - patch.length1 - this.Patch_Margin);\n            patch.length1 += diff_text.length;\n            start1 += diff_text.length;\n            if (diff_type === DIFF_EQUAL) {\n              patch.length2 += diff_text.length;\n              start2 += diff_text.length;\n            } else {\n              empty = false;\n            }\n            patch.diffs.push([diff_type, diff_text]);\n            if (diff_text == bigpatch.diffs[0][1]) {\n              bigpatch.diffs.shift();\n            } else {\n              bigpatch.diffs[0][1] =\n                  bigpatch.diffs[0][1].substring(diff_text.length);\n            }\n          }\n        }\n        // Compute the head context for the next patch.\n        precontext = this.diff_text2(patch.diffs);\n        precontext =\n            precontext.substring(precontext.length - this.Patch_Margin);\n        // Append the end context for this patch.\n        var postcontext = this.diff_text1(bigpatch.diffs)\n                              .substring(0, this.Patch_Margin);\n        if (postcontext !== '') {\n          patch.length1 += postcontext.length;\n          patch.length2 += postcontext.length;\n          if (patch.diffs.length !== 0 &&\n              patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n            patch.diffs[patch.diffs.length - 1][1] += postcontext;\n          } else {\n            patch.diffs.push([DIFF_EQUAL, postcontext]);\n          }\n        }\n        if (!empty) {\n          patches.splice(++x, 0, patch);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push([DIFF_DELETE, line]);\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push([DIFF_INSERT, line]);\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push([DIFF_EQUAL, line]);\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emmulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indicies are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// Export these global variables so that they survive Google's JS compiler.\n// In a browser, 'this' will be 'window'.\n// In node.js 'this' will be a global object.\nthis['diff_match_patch'] = diff_match_patch;\nthis['DIFF_DELETE'] = DIFF_DELETE;\nthis['DIFF_INSERT'] = DIFF_INSERT;\nthis['DIFF_EQUAL'] = DIFF_EQUAL;\n\n"]}